name: Auto Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'

      - name: Clean and reinstall dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --ignore-scripts
          npm install --save-dev rollup @rollup/plugin-typescript

      - name: Build
        run: npm run build

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check-release
        run: |
          VERSION="${{ steps.package-version.outputs.version }}"
          if gh release view "$VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate commit changelog
        id: changelog
        if: steps.check-release.outputs.exists == 'false'
        shell: bash
        run: |
          set -eo pipefail
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
          if [ -n "$LAST_TAG" ]; then
            RANGE="$LAST_TAG..HEAD"
          else
            RANGE="HEAD"
          fi

          COMMITS=$(git log $RANGE --pretty=format:'- %s (%h)' --no-merges 2>/dev/null || echo "Initial release")

          {
            echo "commits<<EOF"
            echo "$COMMITS"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Verify build artifact
        run: test -f dist/pv-monitor-card.js

      - name: Create Draft Release
        if: steps.check-release.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          draft: true
          prerelease: false
          files: dist/pv-monitor-card.js
          body: |
            ## ‚úèÔ∏è Release Notes v${{ steps.package-version.outputs.version }}

            <Hier beschreiben, was sich ge√§ndert hat ‚Ä¶>

            ### üß© √Ñnderungen
            ${{ steps.changelog.outputs.commits }}

            ---

            üì¶ Automatisch erstellt am: ${{ github.event.head_commit.timestamp }}
            
            ‚ö†Ô∏è **Wichtig f√ºr HACS**: Dieser Release muss manuell auf "Published" gesetzt werden, damit HACS das Update erkennt!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip release (already exists)
        if: steps.check-release.outputs.exists == 'true'
        run: |
          echo "Release ${{ steps.package-version.outputs.version }} already exists. Skipping."
